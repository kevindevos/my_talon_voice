diff --git a/.gitignore b/.gitignore
index aefde33..34ba657 100644
--- a/.gitignore
+++ b/.gitignore
@@ -3,6 +3,5 @@ __pycache__
 *.sw?
 .idea/
 # Locally generated
-/settings
 .vscode/settings.json
-.DS_Store
+.DS_Store
\ No newline at end of file
diff --git a/apps/vscode/vscode.talon b/apps/vscode/vscode.talon
index 877f5fc..397a1f6 100644
--- a/apps/vscode/vscode.talon
+++ b/apps/vscode/vscode.talon
@@ -35,6 +35,12 @@ symbol hunt all [<user.text>]:
     sleep(50ms)
     insert(text or "")
 
+disk ugly: user.vscode("workbench.action.files.saveWithoutFormatting")
+disk:
+    edit.save()
+    sleep(150ms)
+    user.vscode("hideSuggestWidget")
+
 # Panels
 panel control: user.vscode("workbench.panel.repl.view.focus")
 panel output: user.vscode("workbench.panel.output.focus")
@@ -74,6 +80,10 @@ file hunt (pace | paste):
     user.vscode("workbench.action.quickOpen")
     sleep(50ms)
     edit.paste()
+items [<user.text>]:
+    user.vscode("workbench.action.quickOpen")
+    sleep(50ms)
+    insert(text or "")
 file copy name: user.vscode("fileutils.copyFileName")
 file copy path: user.vscode("copyFilePath")
 file copy local [path]: user.vscode("copyRelativeFilePath")
@@ -95,6 +105,17 @@ file delete:
     sleep(150ms)
 file open folder: user.vscode("revealFileInOS")
 file reveal: user.vscode("workbench.files.action.showActiveFileInExplorer")
+
+recent [<phrase>]$:
+    user.vscode("workbench.action.showAllEditorsByMostRecentlyUsed")
+    sleep(300ms)
+    user.parse_phrase(phrase or "")
+
+buffers [<phrase>]$:
+    user.vscode("workbench.action.showAllEditorsByMostRecentlyUsed")
+    sleep(300ms)
+    user.parse_phrase(phrase or "")
+
 save ugly: user.vscode("workbench.action.files.saveWithoutFormatting")
 
 # Language Features
@@ -243,6 +264,10 @@ terminal scroll up: user.vscode("workbench.action.terminal.scrollUp")
 terminal scroll down: user.vscode("workbench.action.terminal.scrollDown")
 terminal <number_small>: user.vscode_terminal(number_small)
 
+# Custom Terminal commands
+term lisa: insert("ls")
+term katie: insert("cd")
+
 #TODO: should this be added to linecommands?
 copy line down: user.vscode("editor.action.copyLinesDownAction")
 copy line up: user.vscode("editor.action.copyLinesUpAction")
@@ -283,3 +308,6 @@ cell run: user.vscode("notebook.cell.execute")
 
 install local: user.vscode("workbench.extensions.action.installVSIX")
 preview markdown: user.vscode("markdown.showPreview")
+
+# Translation extension
+translate this: user.vscode("extension.translateTextPreferred")
\ No newline at end of file
diff --git a/core/edit/edit.talon b/core/edit/edit.talon
index 052e915..2502c6b 100644
--- a/core/edit/edit.talon
+++ b/core/edit/edit.talon
@@ -31,6 +31,11 @@ go way right: edit.line_end()
 go way up: edit.file_start()
 go way down: edit.file_end()
 
+scratch <number_small> times: user.delete_left_n(number_small)
+drill <number_small> times: user.delete_right_n(number_small)
+
+disk: edit.save()
+
 go top: edit.file_start()
 go bottom: edit.file_end()
 
@@ -171,7 +176,7 @@ clone line: edit.line_clone()
 new line above: edit.line_insert_up()
 new line below | slap: edit.line_insert_down()
 
-# Insert padding with optional symbols
+# Insert padding with optional sy10mbols
 (pad | padding): user.insert_between(" ", " ")
 (pad | padding) <user.symbol_key>+:
     insert(" ")
@@ -179,7 +184,8 @@ new line below | slap: edit.line_insert_down()
     insert(" ")
 
 # Undo/redo
-undo that: edit.undo()
+#nope: edit.undo()
+nope: key("cmd-z")
 redo that: edit.redo()
 
 # Save
diff --git a/core/file_extension/file_extension.py b/core/file_extension/file_extension.py
index 04a1c23..fe55b22 100644
--- a/core/file_extension/file_extension.py
+++ b/core/file_extension/file_extension.py
@@ -14,6 +14,7 @@ _file_extensions_defaults = {
     "dot see": ".c",
     "dot see sharp": ".cs",
     "dot com": ".com",
+    "dot N L": ".nl",
     "dot net": ".net",
     "dot org": ".org",
     "dot us": ".us",
diff --git a/core/keys/keys.py b/core/keys/keys.py
index 594fc6f..ea3bbfe 100644
--- a/core/keys/keys.py
+++ b/core/keys/keys.py
@@ -247,11 +247,10 @@ simple_keys = [
 ]
 
 alternate_keys = {
-    "wipe": "backspace",
-    "delete": "backspace",
-    #'junk': 'backspace',
-    "forward delete": "delete",
-    "page up": "pageup",
+    "drill": "delete",
+    "scratch": "backspace",
+    "scrape": "escape",
+    "void": "space",
     "page down": "pagedown",
 }
 # mac apparently doesn't have the menu key.
diff --git a/core/modes/sleep_mode.talon b/core/modes/sleep_mode.talon
index 4a0d9c1..f7ff3ce 100644
--- a/core/modes/sleep_mode.talon
+++ b/core/modes/sleep_mode.talon
@@ -30,9 +30,10 @@ settings():
 # means that these won't recognize. The (+) handles this case, so if you say
 # <pause> "talon wake talon wake" <pause>, it'll still work.
 
-^(welcome back)+$:
-    user.mouse_wake()
-    user.history_enable()
-    user.talon_mode()
+# ^(welcome back)+$:
+#    user.mouse_wake()
+#    user.history_enable()
+#    user.talon_mode()
 
-^(talon wake)+$: speech.enable()
+^(talon wake)+$: 
+    speech.enable()
diff --git a/core/modes/to_sleep_mode.talon b/core/modes/to_sleep_mode.talon
index 8fbfcf4..4d6b11e 100644
--- a/core/modes/to_sleep_mode.talon
+++ b/core/modes/to_sleep_mode.talon
@@ -23,4 +23,5 @@ mode: dictation
     speech.disable()
     user.engine_sleep()
 
-^talon sleep [<phrase>]$: speech.disable()
+^talon sleep [<phrase>]$: 
+    speech.disable()
diff --git a/core/noise.py b/core/noise.py
index 80c61ea..b899bae 100644
--- a/core/noise.py
+++ b/core/noise.py
@@ -29,7 +29,7 @@ def noise_trigger_hiss_debounce(active: bool):
     """Since the hiss noise triggers while you're talking we need to debounce it"""
     global hiss_cron
     if active:
-        hiss_cron = cron.after("100ms", lambda: actions.user.noise_trigger_hiss(active))
+        hiss_cron = cron.after("300ms", lambda: actions.user.noise_trigger_hiss(active))
     else:
         cron.cancel(hiss_cron)
         actions.user.noise_trigger_hiss(active)
diff --git a/core/windows_and_tabs/window_management.talon b/core/windows_and_tabs/window_management.talon
index 393cebe..3b0876f 100644
--- a/core/windows_and_tabs/window_management.talon
+++ b/core/windows_and_tabs/window_management.talon
@@ -17,4 +17,4 @@ snap screen <number>: user.move_window_to_screen(number)
 snap <user.running_applications> <user.window_snap_position>:
     user.snap_app(running_applications, window_snap_position)
 snap <user.running_applications> [screen] <number>:
-    user.move_app_to_screen(running_applications, number)
+    user.move_app_to_screen(running_applications, number)
\ No newline at end of file
diff --git a/lang/javascript/javascript.talon b/lang/javascript/javascript.talon
index c05b609..97537f9 100644
--- a/lang/javascript/javascript.talon
+++ b/lang/javascript/javascript.talon
@@ -53,4 +53,4 @@ state reduce: app.notify('ERROR: Command deprecated; please use "dot reduce"')
 
 state spread: "..."
 
-from import: user.insert_between(' from  "', '"')
+from import: user.insert_between(' from  "', '"')
\ No newline at end of file
diff --git a/settings.talon b/settings.talon
index cca9b5f..f55afa3 100644
--- a/settings.talon
+++ b/settings.talon
@@ -21,7 +21,7 @@ settings():
     # 0 = off
     # 1 = on with eyetracker but not zoom mouse mode
     # 2 = on but not with zoom mouse mode
-    user.mouse_enable_pop_click = 1
+    user.mouse_enable_pop_click = 2
 
     # Enable if you like to use the hissing noise to do mouse scroll
     user.mouse_enable_hiss_scroll = 0
